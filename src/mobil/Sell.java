/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mobil;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static mobil.ShowKunde.model;

/**
 *
 * @author Anas
 */
public class Sell extends javax.swing.JPanel {

    public static ResultSet rs = null;
    public static PreparedStatement ps;
    DefaultTableModel model;
    int rowCount;

    /**
     * Creates new form Sell
     */
    public Sell() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vkTabele = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        sum = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        wareBox = new javax.swing.JComboBox<>();
        löschen = new javax.swing.JButton();
        sellB = new javax.swing.JButton();
        insterWare = new javax.swing.JButton();
        summmm = new javax.swing.JLabel();
        quanFeld = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        kundenBox = new javax.swing.JComboBox<>();
        datumL = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        zzeigen = new javax.swing.JButton();

        setBackground(new java.awt.Color(24, 40, 108));
        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "المعتمد: المبيعات", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24), new java.awt.Color(255, 204, 204))); // NOI18N
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 255, 255));
        jLabel2.setText("الزبون");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 255, 255));
        jLabel4.setText("اجمالي الفاتورة :");

        vkTabele.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "السعر الاجمالي", "السعر للقطعة", "الكمية", "المادة"
            }
        ));
        vkTabele.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vkTabeleMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(vkTabele);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 51, 51));
        jButton3.setText("رجوع");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 153, 153));
        jLabel9.setText("X");
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 255, 255));
        jLabel5.setText("التاريخ");

        sum.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sum.setForeground(new java.awt.Color(255, 255, 102));
        sum.setText("0");
        sum.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                sumAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jLabel7.setForeground(new java.awt.Color(204, 255, 255));
        jLabel7.setText("يوجد لدينا");

        wareBox.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                wareBoxPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        wareBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                wareBoxKeyPressed(evt);
            }
        });

        löschen.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        löschen.setForeground(new java.awt.Color(255, 51, 51));
        löschen.setText("حذف");
        löschen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                löschenActionPerformed(evt);
            }
        });

        sellB.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        sellB.setForeground(new java.awt.Color(255, 51, 51));
        sellB.setText("انشاء فاتورة");
        sellB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellBActionPerformed(evt);
            }
        });

        insterWare.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        insterWare.setForeground(new java.awt.Color(255, 51, 51));
        insterWare.setText("اضافة");
        insterWare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insterWareActionPerformed(evt);
            }
        });

        summmm.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        summmm.setForeground(new java.awt.Color(255, 51, 51));
        summmm.setText("0.0");

        quanFeld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                quanFeldKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 153, 102));
        jLabel8.setText("المادة");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 153, 102));
        jLabel10.setText("الكمية");

        kundenBox.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                kundenBoxPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        datumL.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        datumL.setForeground(new java.awt.Color(255, 51, 51));
        datumL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        datumL.setText("Datum");

        jButton1.setText("Drucken");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        zzeigen.setText("اظهار");
        zzeigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zzeigenActionPerformed(evt);
            }
        });
        zzeigen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                zzeigenKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                zzeigenKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(jButton3)
                .addGap(160, 160, 160)
                .addComponent(löschen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(42, 42, 42)
                .addComponent(sellB)
                .addGap(102, 102, 102))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel10))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(datumL, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addGap(125, 125, 125)
                                .addComponent(sum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(kundenBox, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(quanFeld, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(58, 58, 58)
                                .addComponent(wareBox, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(insterWare)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel8)))
                .addGap(71, 71, 71)
                .addComponent(jLabel9)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(summmm)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(zzeigen)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(datumL, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(1, 1, 1))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7)
                                        .addComponent(sum, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(wareBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(insterWare)
                            .addComponent(quanFeld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(zzeigen)
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kundenBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(10, 10, 10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(summmm))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(löschen)
                    .addComponent(sellB)
                    .addComponent(jButton1))
                .addGap(22, 22, 22))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        model = (DefaultTableModel) vkTabele.getModel();
        if(model.getRowCount()>0)model.setRowCount(0);
        Mobil.cl.show(Mobil.cardPanel, "Liste");
        summmm.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel9MouseClicked

    private void vkTabeleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vkTabeleMouseClicked


    }//GEN-LAST:event_vkTabeleMouseClicked

    private void sumAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_sumAncestorAdded
        try {
            String ss = "SELECT quantit FROM ware WHERE Name=? ";
            ps = Utils.getConnection().prepareStatement(ss);
            ps.setInt(1, wareBox.getSelectedIndex());
            rs = ps.executeQuery();
            while (rs.next()) {

            }
        } catch (SQLException ex) {
            Logger.getLogger(Sell.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sumAncestorAdded
//اظهارالعدد الباقي
    private void wareBoxPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_wareBoxPopupMenuWillBecomeInvisible

        String tmp = (String) wareBox.getSelectedItem();
        try {
            String ss = "SELECT quantit FROM ware WHERE Name=? ";
            ps = Utils.getConnection().prepareStatement(ss);
            ps.setString(1, tmp);
            rs = ps.executeQuery();
            while (rs.next()) {
                String add = rs.getString("quantit");
                int artikel = getRowArtikel(tmp);
                if (artikel < 0) {
                    sum.setText(add);
                } else {
                    int g = Integer.parseInt((String) vkTabele.getValueAt(artikel, 2));
                    g = Integer.parseInt(add) - g;
                    sum.setText(Integer.toString(g));
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Sell.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_wareBoxPopupMenuWillBecomeInvisible
    private int getRowArtikel(String artikel) {
        for (int i = 0; i < vkTabele.getRowCount(); i++) {

            if (artikel.equals((String) vkTabele.getValueAt(i, 3))) {
                return i;
            }
        }
        return -1;
    }
    private void insterWareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insterWareActionPerformed
        String price;
        double totelprise = 0.0;
        double summe;

        if (!Utils.isEmpty(quanFeld.getText())) {
            int s = Integer.parseInt(sum.getText());
            int quan = Integer.parseInt(quanFeld.getText());
            if (quan > s) {
                JOptionPane.showMessageDialog(null, "البضاعة المباعة اقل من الكمية الموجودة");
                return;

            }
            int sum1 = s - quan;
            sum.setText(String.valueOf(sum1));

            model = (DefaultTableModel) vkTabele.getModel();
            rowCount = model.getRowCount();
            String query = "SELECT ware.vkpreise FROM `kaufware`,ware WHERE kaufware.wareId=ware.ID AND kaufware.datum=(SELECT MAX(kaufware.datum) "
                    + "FROM kaufware) AND ware.Name=?";

            try {
                ps = Utils.getConnection().prepareStatement(query);
                ps.setString(1, wareBox.getSelectedItem().toString());
                rs = ps.executeQuery();

                while (rs.next()) {
                    double l = Double.parseDouble(rs.getString("vkpreise"));
                    summe = l * quan;
                    int rowArtikel = getRowArtikel(wareBox.getSelectedItem().toString());
                    if (rowArtikel < 0) {
                        model.addRow(new Object[]{(summe), (rs.getString(1)), quanFeld.getText(), wareBox.getSelectedItem()});
                    } else {
                        int g = Integer.parseInt((String) vkTabele.getValueAt(rowArtikel, 2));
                        g = g + quan;

                        vkTabele.setValueAt(Integer.toString(g), rowArtikel, 2);
                        summe = l * g;
                        vkTabele.setValueAt(summe, rowArtikel, 0);
                    }

                    for (int i = 0; i < model.getRowCount(); i++) {
                        double Amount = Double.parseDouble(model.getValueAt(i, 0) + "");
                        totelprise = Amount + totelprise;
                    }
                    summmm.setText(Double.toString(totelprise));

                    quanFeld.setText("");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Sell.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(null, "الرجاء ادخال الكمية");

        }
    }//GEN-LAST:event_insterWareActionPerformed

    private void quanFeldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quanFeldKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_quanFeldKeyTyped

    private void löschenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_löschenActionPerformed
       double totelprise = 0.0;
        model = (DefaultTableModel) vkTabele.getModel();
        int selectedRow = vkTabele.getSelectedRow();
        if (selectedRow >= 0) {      
             double Amount = Double.parseDouble(model.getValueAt(selectedRow, 0) + "");
             totelprise=Double.valueOf(summmm.getText());
             totelprise = totelprise - Amount ;
            summmm.setText(Double.toString(totelprise));
            model.removeRow(selectedRow);
        } else {
            JOptionPane.showMessageDialog(null, "لم تقم بتحديد اي من الاسطر");
            return;
        }

    }//GEN-LAST:event_löschenActionPerformed

    private void kundenBoxPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_kundenBoxPopupMenuWillBecomeInvisible

    }//GEN-LAST:event_kundenBoxPopupMenuWillBecomeInvisible

    private void sellBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellBActionPerformed
        int abId = 0;
        java.util.Date dt = new java.util.Date();
        java.text.SimpleDateFormat sdf
                = new java.text.SimpleDateFormat("yyyy-MM-dd");
        String currentTime = sdf.format(dt);
        int wareId = 0;
        int kundeId = 0;
        String w = "SELECT ID FROM kunde WHERE Name=? ";
        try {
            ps = Utils.getConnection().prepareStatement(w);
            ps.setString(1, kundenBox.getSelectedItem().toString());
            rs = ps.executeQuery();
            while (rs.next()) {
                kundeId = rs.getInt(1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Sell.class.getName()).log(Level.SEVERE, null, ex);
        }

        int selectedRow = vkTabele.getRowCount();

        model = (DefaultTableModel) vkTabele.getModel();
        String s = "INSERT INTO abrechnung(Kundeid,datum,gesamt)VALUES(?,?,?) ";

        try {
            ps = Utils.getConnection().prepareStatement(s);
            ps.setInt(1, kundeId);
            ps.setString(2, currentTime);
            ps.setString(3, summmm.getText());
            ps.executeUpdate();

        } catch (SQLException ex) {
            Logger.getLogger(Sell.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = 0; i < selectedRow; i++) {
            String ware = model.getValueAt(i, 3).toString();
            String menge = model.getValueAt(i, 2).toString();

            w = "SELECT ID FROM ware WHERE Name=? ";
            try {
                ps = Utils.getConnection().prepareStatement(w);
                ps.setString(1, ware);
                rs = ps.executeQuery();
                while (rs.next()) {
                    wareId = rs.getInt(1);
                }
            } catch (SQLException ex) {
                Logger.getLogger(Sell.class.getName()).log(Level.SEVERE, null, ex);
            }
            w = "SELECT ID FROM abrechnung WHERE Kundeid=? AND datum=? ";
            try {
                ps = Utils.getConnection().prepareStatement(w);
                ps.setInt(1, kundeId);
                ps.setString(2, currentTime);
                rs = ps.executeQuery();
                while (rs.next()) {
                    abId = rs.getInt(1);
                }
            } catch (SQLException ex) {
                Logger.getLogger(Sell.class.getName()).log(Level.SEVERE, null, ex);
            }
            String query = "INSERT INTO rechnungxware(abID,wareID,Menge)VALUES(?,?,?) ";
            try {
                ps = Utils.getConnection().prepareStatement(query);
                ps.setInt(1, abId);
                ps.setInt(2, wareId);
                ps.setInt(3, Integer.parseInt(menge));
                ps.executeUpdate();
                
            } catch (SQLException ex) {
                Logger.getLogger(Sell.class.getName()).log(Level.SEVERE, null, ex);
            }
            String query1 = "UPDATE `ware` SET `quantit`= quantit-? WHERE ID =?";
            try {
                ps = Utils.getConnection().prepareStatement(query1);
                ps.setInt(1, Integer.parseInt(menge));
                ps.setInt(2, wareId);
                ps.executeUpdate();
                Mobil.cl.show(Mobil.cardPanel, "Liste");
                
            } catch (SQLException ex) {
                Logger.getLogger(Sell.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_sellBActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try (PrintWriter writer = new PrintWriter(new File(System.getProperty("user.home") + File.separator + "test.csv"))) {
            StringBuilder sb = new StringBuilder();
            sb.append("\"sep=,\"");
            sb.append("\n");
            sb.append("id");
            sb.append(',');
            sb.append("Name");
            sb.append('\n');

            sb.append("1");
            sb.append(',');
            sb.append("Prashant Ghimire");
            sb.append('\n');

            writer.write(sb.toString());

            System.out.println("done!");

        } catch (FileNotFoundException e) {
            System.out.println(e.getMessage());
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void zzeigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zzeigenActionPerformed
        Mobil.ware3 = (String) wareBox.getSelectedItem();
        Mobil.cl.show(Mobil.cardPanel, "Zeigen");
        Zeigen.anzeigen();
    }//GEN-LAST:event_zzeigenActionPerformed

    private void zzeigenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_zzeigenKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_zzeigenKeyTyped

    private void zzeigenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_zzeigenKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            Mobil.cl.show(Mobil.cardPanel, "Zeigen");
        }
    }//GEN-LAST:event_zzeigenKeyPressed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            Mobil.cl.show(Mobil.cardPanel, "Zeigen");
        }

    }//GEN-LAST:event_formKeyPressed

    private void wareBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_wareBoxKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            Mobil.ware3 = (String) wareBox.getSelectedItem();
            Mobil.cl.show(Mobil.cardPanel, "Zeigen");
            Zeigen.anzeigen();
        }
    }//GEN-LAST:event_wareBoxKeyPressed
    public static void liste() {
        wareBox.removeAllItems();
        try {
            String ss = "SELECT Name FROM ware ";
            ps = Utils.getConnection().prepareStatement(ss);
            rs = ps.executeQuery();
            while (rs.next()) {
                String name = rs.getString("Name");
                wareBox.addItem(name);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Sell.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static void liste1() {
        kundenBox.removeAllItems();
        try {
            String ss = "SELECT Name FROM kunde ";
            ps = Utils.getConnection().prepareStatement(ss);
            rs = ps.executeQuery();
            while (rs.next()) {
                String name = rs.getString("Name");
                kundenBox.addItem(name);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Sell.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JLabel datumL;
    private javax.swing.JButton insterWare;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JComboBox<String> kundenBox;
    private javax.swing.JButton löschen;
    private javax.swing.JTextField quanFeld;
    private javax.swing.JButton sellB;
    private javax.swing.JLabel sum;
    private javax.swing.JLabel summmm;
    private javax.swing.JTable vkTabele;
    public static javax.swing.JComboBox<String> wareBox;
    private javax.swing.JButton zzeigen;
    // End of variables declaration//GEN-END:variables
}
